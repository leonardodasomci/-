import yfinance as yf
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib as mpl

# 📌 폰트 설정 (Mac 전용)
mpl.rcParams['font.family'] = 'AppleGothic'   # 맥 기본 한글 폰트
mpl.rcParams['axes.unicode_minus'] = False    # 마이너스 깨짐 방지

# 📈 데이터 불러오기 (삼성전자: 005930.KQ = 코스닥, 005930.KS = 코스피)
ticker = yf.Ticker("005930.KQ")
data = ticker.history(period="1y")

# 🧮 이동평균선 계산
data['SMA20'] = data['Close'].rolling(window=20).mean()
data['SMA50'] = data['Close'].rolling(window=50).mean()

# 🟢🔴 매수·매도 신호 계산
data['Signal'] = 0
data['Signal'][20:] = np.where(data['SMA20'][20:] > data['SMA50'][20:], 1, -1)

# 🖨️ 확인 (마지막 5줄)
print(data.tail())

# 📊 차트 그리기
plt.figure(figsize=(12,6))
plt.plot(data['Close'], label='종가')
plt.plot(data['SMA20'], label='20일선')
plt.plot(data['SMA50'], label='50일선')

# 매수 신호 (▲ 초록색)
plt.scatter(data.index[data['Signal'] == 1],
            data['Close'][data['Signal'] == 1],
            marker='^', color='g', label='매수 신호', alpha=1)

# 매도 신호 (▼ 빨간색)
plt.scatter(data.index[data['Signal'] == -1],
            data['Close'][data['Signal'] == -1],
            marker='v', color='r', label='매도 신호', alpha=1)

plt.title("삼성전자 주가 + 이동평균선 매매 신호")
plt.xlabel("날짜")
plt.ylabel("가격")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
